/*
 * OpenProdoc
 * 
 * See the help doc files distributed with
 * this work for additional information regarding copyright ownership.
 * Joaquin Hierro licenses this file to You under:
 * 
 * License GNU GPL v3 http://www.gnu.org/licenses/gpl.html
 * 
 * you may not use this file except in compliance with the License.  
 * Unless agreed to in writing, software is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * 
 * author: Joaquin Hierro      2011
 * 
 */

/*
 * MantUsers.java
 *
 * Created on 17-feb-2010, 21:16:33
 */

package prodocswing.forms;

import prodoc.Attribute;
import prodoc.PDException;
import prodoc.PDObjDefs;
import prodoc.Record;

/**
 *
 * @author jhierrot
 */
public class MantAttr extends javax.swing.JDialog
{
private Record AttrEdit;
private boolean Cancel;


/** Creates new form MantUsers
 * @param parent
 * @param modal
 * @param pModeGrp  
 */
public MantAttr(java.awt.Frame parent, boolean modal, boolean pModeGrp)
{
super(parent, modal);
initComponents();
}

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        LabelOperation = new javax.swing.JLabel();
        AttrNameLabel = new javax.swing.JLabel();
        AttrNameTextField = new javax.swing.JTextField();
        AttrUserNameLabel = new javax.swing.JLabel();
        AttrUserNameTextField = new javax.swing.JTextField();
        DescripLabel = new javax.swing.JLabel();
        DescripTextField = new javax.swing.JTextField();
        TypeLabel = new javax.swing.JLabel();
        TypeComboBox = new javax.swing.JComboBox();
        LongLabel = new javax.swing.JLabel();
        LongMaxTextField = new javax.swing.JTextField();
        ReqLabel = new javax.swing.JLabel();
        ReqCheckBox = new javax.swing.JCheckBox();
        PrimKeyLabel = new javax.swing.JLabel();
        PrimKeyCheckBox = new javax.swing.JCheckBox();
        UniqueLabel = new javax.swing.JLabel();
        UniqueCheckBox = new javax.swing.JCheckBox();
        AllowModLabel = new javax.swing.JLabel();
        AllowModCheckBox = new javax.swing.JCheckBox();
        MultivalLabel = new javax.swing.JLabel();
        MultivalCheckBox = new javax.swing.JCheckBox();
        ButtonAcept = new javax.swing.JButton();
        ButtonCancel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle(MainWin.TT("Attributes_Maintenance"));
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        LabelOperation.setFont(new java.awt.Font("DejaVu Sans", 1, 14)); // NOI18N
        LabelOperation.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        LabelOperation.setText("jLabel1");

        AttrNameLabel.setFont(MainWin.getFontDialog());
        AttrNameLabel.setText(MainWin.TT("Name"));

        AttrNameTextField.setFont(MainWin.getFontDialog());

        AttrUserNameLabel.setFont(MainWin.getFontDialog());
        AttrUserNameLabel.setText(MainWin.TT("Visible_Name_of_attribute"));

        AttrUserNameTextField.setFont(MainWin.getFontDialog());

        DescripLabel.setFont(MainWin.getFontDialog());
        DescripLabel.setText(MainWin.TT("Description"));

        DescripTextField.setFont(MainWin.getFontDialog());

        TypeLabel.setFont(MainWin.getFontDialog());
        TypeLabel.setText(MainWin.TT("attribute_type"));

        TypeComboBox.setFont(MainWin.getFontDialog());
        TypeComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Integer", "Float", "String", "Date", "Boolean", "TimeStamp" }));
        TypeComboBox.setSelectedIndex(2);

        LongLabel.setFont(MainWin.getFontDialog());
        LongLabel.setText(MainWin.TT("Length"));

        LongMaxTextField.setFont(MainWin.getFontDialog());

        ReqLabel.setFont(MainWin.getFontDialog());
        ReqLabel.setText(MainWin.TT("Required"));

        ReqCheckBox.setFont(MainWin.getFontDialog());

        PrimKeyLabel.setFont(MainWin.getFontDialog());
        PrimKeyLabel.setText(MainWin.TT("Primary_key"));

        PrimKeyCheckBox.setFont(MainWin.getFontDialog());

        UniqueLabel.setFont(MainWin.getFontDialog());
        UniqueLabel.setText(MainWin.TT("Unique_value"));

        UniqueCheckBox.setFont(MainWin.getFontDialog());

        AllowModLabel.setFont(MainWin.getFontDialog());
        AllowModLabel.setText(MainWin.TT("Modifiable"));

        AllowModCheckBox.setFont(MainWin.getFontDialog());

        MultivalLabel.setFont(MainWin.getFontDialog());
        MultivalLabel.setText(MainWin.TT("Modifiable"));

        MultivalCheckBox.setFont(MainWin.getFontDialog());
        MultivalCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MultivalCheckBoxActionPerformed(evt);
            }
        });

        ButtonAcept.setFont(MainWin.getFontDialog());
        ButtonAcept.setText(MainWin.TT("Ok"));
        ButtonAcept.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonAceptActionPerformed(evt);
            }
        });

        ButtonCancel.setFont(MainWin.getFontDialog());
        ButtonCancel.setText(MainWin.TT("Cancel"));
        ButtonCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonCancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(AllowModLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(UniqueLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(MultivalLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(PrimKeyLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ReqLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(DescripTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 367, Short.MAX_VALUE)
                            .addComponent(TypeComboBox, 0, 367, Short.MAX_VALUE)
                            .addComponent(LongMaxTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 367, Short.MAX_VALUE)
                            .addComponent(AllowModCheckBox)
                            .addComponent(ReqCheckBox)
                            .addComponent(UniqueCheckBox)
                            .addComponent(PrimKeyCheckBox)
                            .addComponent(AttrNameTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 367, Short.MAX_VALUE)
                            .addComponent(AttrUserNameTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 367, Short.MAX_VALUE))
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(MultivalCheckBox)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(ButtonAcept)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(ButtonCancel)
                        .addGap(12, 12, 12))))
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(LabelOperation, javax.swing.GroupLayout.DEFAULT_SIZE, 513, Short.MAX_VALUE)
                .addContainerGap(86, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(DescripLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TypeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(LongLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(AttrUserNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(AttrNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {AllowModLabel, AttrNameLabel, AttrUserNameLabel, DescripLabel, LongLabel, PrimKeyLabel, ReqLabel, TypeLabel, UniqueLabel});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(LabelOperation)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(AttrNameLabel)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(AttrUserNameLabel))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(AttrNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(AttrUserNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(DescripTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(DescripLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(TypeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(TypeLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(LongMaxTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(LongLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(ReqCheckBox, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(4, 4, 4)
                                        .addComponent(ReqLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                                    .addComponent(PrimKeyLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(PrimKeyCheckBox, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(UniqueCheckBox, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(UniqueLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(AllowModCheckBox, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(AllowModLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(MultivalLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGap(5, 5, 5))
                                    .addComponent(MultivalCheckBox, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(ButtonCancel)
                                    .addComponent(ButtonAcept))))))
                .addGap(18, 18, 18))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ButtonCancelActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_ButtonCancelActionPerformed
    {//GEN-HEADEREND:event_ButtonCancelActionPerformed
Cancel=true;
this.dispose();
    }//GEN-LAST:event_ButtonCancelActionPerformed

    private void ButtonAceptActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_ButtonAceptActionPerformed
    {//GEN-HEADEREND:event_ButtonAceptActionPerformed
try {
Attribute Attr;
Attr = AttrEdit.getAttr(PDObjDefs.fATTRNAME);
Attr.setValue(AttrNameTextField.getText());
Attr = AttrEdit.getAttr(PDObjDefs.fATTRUSERNAME);
Attr.setValue(AttrUserNameTextField.getText());
Attr = AttrEdit.getAttr(PDObjDefs.fATTRDESCRIPTION);
Attr.setValue(DescripTextField.getText());
Attr = AttrEdit.getAttr(PDObjDefs.fATTRLONG);
if (LongMaxTextField.getText().length() > 0 && ((String) TypeComboBox.getSelectedItem()).equalsIgnoreCase("String"))
    {
    Attr.setValue(new Integer(LongMaxTextField.getText()));
    }
else
    {
    Attr.setValue(new Integer(0));
    }
Attr = AttrEdit.getAttr(PDObjDefs.fATTRTYPE);
Attr.setValue(TypeComboBox.getSelectedIndex());
Attr = AttrEdit.getAttr(PDObjDefs.fATTRREQUIRED);
Boolean Act;
if (ReqCheckBox.isSelected())
    {
    Act =true;
    }
else
    {
    Act =false;
    }
Attr.setValue(Act);
Attr = AttrEdit.getAttr(PDObjDefs.fATTRUNIQUE);
if (UniqueCheckBox.isSelected())
    {
    Act =true;
    }
else
    {
    Act =false;
    }
Attr.setValue(Act);
Attr = AttrEdit.getAttr(PDObjDefs.fATTRPRIMKEY);
if (PrimKeyCheckBox.isSelected())
    {
    Act =true;
    }
else
    {
    Act =false;
    }
Attr.setValue(Act);
Attr = AttrEdit.getAttr(PDObjDefs.fATTRMODALLOW);
if (AllowModCheckBox.isSelected())
    {
    Act =true;
    }
else
    {
    Act =false;
    }
Attr.setValue(Act);
Attr = AttrEdit.getAttr(PDObjDefs.fATTRMULTIVALUED);
if (MultivalCheckBox.isSelected())
    {
    Act =true;
    }
else
    {
    Act =false;
    }
Attr.setValue(Act);
Cancel = false;
this.dispose();
} catch (PDException ex)
    {
    MainWin.Message(MainWin.DrvTT(ex.getLocalizedMessage()));
    }
    }//GEN-LAST:event_ButtonAceptActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt)//GEN-FIRST:event_formWindowClosing
    {//GEN-HEADEREND:event_formWindowClosing
Cancel=true;
    }//GEN-LAST:event_formWindowClosing

    private void MultivalCheckBoxActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_MultivalCheckBoxActionPerformed
    {//GEN-HEADEREND:event_MultivalCheckBoxActionPerformed
if (MultivalCheckBox.isSelected())
    {
    TypeComboBox.setSelectedItem("String");    
    PrimKeyCheckBox.setSelected(true);
    PrimKeyCheckBox.setEnabled(false);
    UniqueCheckBox.setSelected(true);
    UniqueCheckBox.setEnabled(false);
    ReqCheckBox.setSelected(false);
    ReqCheckBox.setEnabled(false);
    }
else
    {
    PrimKeyCheckBox.setEnabled(true);
    UniqueCheckBox.setEnabled(true);
    ReqCheckBox.setEnabled(true);
    }
    }//GEN-LAST:event_MultivalCheckBoxActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox AllowModCheckBox;
    private javax.swing.JLabel AllowModLabel;
    private javax.swing.JLabel AttrNameLabel;
    private javax.swing.JTextField AttrNameTextField;
    private javax.swing.JLabel AttrUserNameLabel;
    private javax.swing.JTextField AttrUserNameTextField;
    private javax.swing.JButton ButtonAcept;
    private javax.swing.JButton ButtonCancel;
    private javax.swing.JLabel DescripLabel;
    private javax.swing.JTextField DescripTextField;
    private javax.swing.JLabel LabelOperation;
    private javax.swing.JLabel LongLabel;
    private javax.swing.JTextField LongMaxTextField;
    private javax.swing.JCheckBox MultivalCheckBox;
    private javax.swing.JLabel MultivalLabel;
    private javax.swing.JCheckBox PrimKeyCheckBox;
    private javax.swing.JLabel PrimKeyLabel;
    private javax.swing.JCheckBox ReqCheckBox;
    private javax.swing.JLabel ReqLabel;
    private javax.swing.JComboBox TypeComboBox;
    private javax.swing.JLabel TypeLabel;
    private javax.swing.JCheckBox UniqueCheckBox;
    private javax.swing.JLabel UniqueLabel;
    // End of variables declaration//GEN-END:variables

/**
*
*/
public void AddMode()
{
LabelOperation.setText(MainWin.TT("Add_Attribute"));
}
//----------------------------------------------------------------
/**
*
*/
public void DelMode()
{
LabelOperation.setText(MainWin.TT("Delete_Attribute"));
AttrNameTextField.setEditable(false);
AttrUserNameTextField.setEditable(false);
DescripTextField.setEditable(false);
TypeComboBox.setEnabled(false);
AllowModCheckBox.setEnabled(false);
UniqueCheckBox.setEnabled(false);
PrimKeyCheckBox.setEnabled(false);
ReqCheckBox.setEnabled(false);
MultivalCheckBox.setEnabled(false);
}
//----------------------------------------------------------------
/**
*
*/
public void EditMode()
{
LabelOperation.setText(MainWin.TT("Update_Attribute"));
AttrNameTextField.setEditable(false);
}
//----------------------------------------------------------------
/**
* @return the Atribute defined
*/
public Record getRecord()
{
return AttrEdit;
}
//----------------------------------------------------------------
/**
 * @param pAttrEdit
*/
public void setRecord(Record pAttrEdit)
{
AttrEdit = pAttrEdit;
Attribute Attr;
Attr=AttrEdit.getAttr(PDObjDefs.fATTRNAME); //-----------------------------
AttrNameLabel.setText(MainWin.DrvTT(Attr.getUserName()));
if (Attr.getValue() != null)
    AttrNameTextField.setText((String) Attr.getValue());
AttrNameTextField.setToolTipText(MainWin.DrvTT(Attr.getDescription()));
Attr=AttrEdit.getAttr(PDObjDefs.fATTRUSERNAME); //-----------------------------
AttrUserNameLabel.setText(MainWin.DrvTT(Attr.getUserName()));
if (Attr.getValue() != null)
    AttrUserNameTextField.setText((String) Attr.getValue());
AttrUserNameTextField.setToolTipText(MainWin.DrvTT(Attr.getDescription()));
Attr=AttrEdit.getAttr(PDObjDefs.fATTRDESCRIPTION); //-----------------------------
DescripLabel.setText(MainWin.DrvTT(Attr.getUserName()));
if (Attr.getValue() != null)
    DescripTextField.setText((String) Attr.getValue());
DescripTextField.setToolTipText(MainWin.DrvTT(Attr.getDescription()));
Attr=AttrEdit.getAttr(PDObjDefs.fATTRTYPE); //-------------------
TypeLabel.setText(MainWin.DrvTT(Attr.getUserName()));
if (Attr.getValue()!=null)
    {
    int Level=(Integer)Attr.getValue();
    TypeComboBox.setSelectedIndex(Level);
    }
TypeComboBox.setToolTipText(MainWin.DrvTT(Attr.getDescription()));
Attr=AttrEdit.getAttr(PDObjDefs.fATTRLONG); //-----------------------------
LongLabel.setText(MainWin.DrvTT(Attr.getUserName()));
if (Attr.getValue() != null)
    LongMaxTextField.setText(((Integer) Attr.getValue()).toString());
LongMaxTextField.setToolTipText(MainWin.DrvTT(Attr.getDescription()));
Attr=AttrEdit.getAttr(PDObjDefs.fATTRREQUIRED); //-----------------------------
ReqLabel.setText(MainWin.DrvTT(Attr.getUserName()));
if (Attr.getValue()!=null)
    ReqCheckBox.setSelected((Boolean)Attr.getValue());
ReqCheckBox.setToolTipText(MainWin.DrvTT(Attr.getDescription()));
Attr=AttrEdit.getAttr(PDObjDefs.fATTRUNIQUE); //-----------------------------
UniqueLabel.setText(MainWin.DrvTT(Attr.getUserName()));
if (Attr.getValue()!=null)
    UniqueCheckBox.setSelected((Boolean)Attr.getValue());
UniqueCheckBox.setToolTipText(MainWin.DrvTT(Attr.getDescription()));
Attr=AttrEdit.getAttr(PDObjDefs.fATTRPRIMKEY); //-----------------------------
PrimKeyLabel.setText(MainWin.DrvTT(Attr.getUserName()));
if (Attr.getValue()!=null)
    PrimKeyCheckBox.setSelected((Boolean)Attr.getValue());
PrimKeyCheckBox.setToolTipText(MainWin.DrvTT(Attr.getDescription()));
Attr=AttrEdit.getAttr(PDObjDefs.fATTRMODALLOW); //-----------------------------
AllowModLabel.setText(MainWin.DrvTT(Attr.getUserName()));
if (Attr.getValue()!=null)
    AllowModCheckBox.setSelected((Boolean)Attr.getValue());
else
    AllowModCheckBox.setSelected(true);
AllowModCheckBox.setToolTipText(MainWin.DrvTT(Attr.getDescription()));
Attr=AttrEdit.getAttr(PDObjDefs.fATTRMULTIVALUED); //-----------------------------
MultivalLabel.setText(MainWin.DrvTT(Attr.getUserName()));
if (Attr.getValue()!=null)
    MultivalCheckBox.setSelected((Boolean)Attr.getValue());
MultivalCheckBox.setToolTipText(MainWin.DrvTT(Attr.getDescription()));
if (MultivalCheckBox.isSelected())
    {
    TypeComboBox.setSelectedItem("String");    
    PrimKeyCheckBox.setSelected(true);
    PrimKeyCheckBox.setEnabled(false);
    UniqueCheckBox.setSelected(true);
    UniqueCheckBox.setEnabled(false);
    ReqCheckBox.setSelected(false);
    ReqCheckBox.setEnabled(false);
    }
else
    {
    PrimKeyCheckBox.setEnabled(true);
    UniqueCheckBox.setEnabled(true);
    ReqCheckBox.setEnabled(true);
    }
}
//----------------------------------------------------------------
/**
* @return the Cancel
*/
public boolean isCancel()
{
return Cancel;
}
//----------------------------------------------------------------
}
