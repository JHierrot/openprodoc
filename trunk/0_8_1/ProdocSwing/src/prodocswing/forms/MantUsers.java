/*
 * OpenProdoc
 * 
 * See the help doc files distributed with
 * this work for additional information regarding copyright ownership.
 * Joaquin Hierro licenses this file to You under:
 * 
 * License GNU GPL v3 http://www.gnu.org/licenses/gpl.html
 * 
 * you may not use this file except in compliance with the License.  
 * Unless agreed to in writing, software is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * 
 * author: Joaquin Hierro      2011
 * 
 */

/*
 * MantUsers.java
 *
 * Created on 17-feb-2010, 21:16:33
 */

package prodocswing.forms;

import javax.swing.ComboBoxModel;
import javax.swing.DefaultComboBoxModel;
import prodoc.Attribute;
import prodoc.PDException;
import prodoc.PDUser;
import prodoc.Record;

/**
 *
 * @author jhierrot
 */
public class MantUsers extends javax.swing.JDialog
{
private Record User;
private boolean Cancel;

/** Creates new form MantUsers
 * @param parent 
 * @param modal
 */
public MantUsers(java.awt.Frame parent, boolean modal)
{
super(parent, modal);
initComponents();
}
/** This method is called from within the constructor to
 * initialize the form.
 * WARNING: Do NOT modify this code. The content of this method is
 * always regenerated by the Form Editor.
 */
@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        LabelOperation = new javax.swing.JLabel();
        UserNameLabel = new javax.swing.JLabel();
        UserNameTextField = new javax.swing.JTextField();
        DescriptionLabel = new javax.swing.JLabel();
        DescriptionTextField = new javax.swing.JTextField();
        EmailLabel = new javax.swing.JLabel();
        eMailTextField = new javax.swing.JTextField();
        ValidationLabel = new javax.swing.JLabel();
        ValidComboBox = new javax.swing.JComboBox();
        ActiveLabel = new javax.swing.JLabel();
        ActiveCheckBox = new javax.swing.JCheckBox();
        RoleLabel = new javax.swing.JLabel();
        RolComboBox = new javax.swing.JComboBox();
        PasswordLabel = new javax.swing.JLabel();
        PasswordTextField = new javax.swing.JTextField();
        CustomLabel = new javax.swing.JLabel();
        CustomComboBox = new javax.swing.JComboBox();
        ButtonAcept = new javax.swing.JButton();
        ButtonCancel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle(MainWin.TT("Users_Maintenance"));
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        LabelOperation.setFont(new java.awt.Font("DejaVu Sans", 1, 14));
        LabelOperation.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        LabelOperation.setText("jLabel1");

        UserNameLabel.setFont(MainWin.getFontDialog());
        UserNameLabel.setText("jLabel1");

        UserNameTextField.setFont(MainWin.getFontDialog());

        DescriptionLabel.setFont(MainWin.getFontDialog());
        DescriptionLabel.setText("jLabel1");

        DescriptionTextField.setFont(MainWin.getFontDialog());

        EmailLabel.setFont(MainWin.getFontDialog());
        EmailLabel.setText("jLabel1");

        eMailTextField.setFont(MainWin.getFontDialog());

        ValidationLabel.setFont(MainWin.getFontDialog());
        ValidationLabel.setText("jLabel1");

        ValidComboBox.setFont(MainWin.getFontDialog());
        ValidComboBox.setModel(getComboModelAuth());

        ActiveLabel.setFont(MainWin.getFontDialog());
        ActiveLabel.setText("jLabel1");

        ActiveCheckBox.setFont(MainWin.getFontDialog());
        ActiveCheckBox.setSelected(true);

        RoleLabel.setFont(MainWin.getFontDialog());
        RoleLabel.setText("jLabel1");

        RolComboBox.setFont(MainWin.getFontDialog());
        RolComboBox.setModel(getComboModel());

        PasswordLabel.setFont(MainWin.getFontDialog());
        PasswordLabel.setText("jLabel1");

        PasswordTextField.setFont(MainWin.getFontDialog());

        CustomLabel.setFont(MainWin.getFontDialog());
        CustomLabel.setText("jLabel1");

        CustomComboBox.setFont(MainWin.getFontDialog());
        CustomComboBox.setModel(getComboModelCustom());

        ButtonAcept.setFont(MainWin.getFontDialog());
        ButtonAcept.setText(MainWin.TT("Ok"));
        ButtonAcept.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonAceptActionPerformed(evt);
            }
        });

        ButtonCancel.setFont(MainWin.getFontDialog());
        ButtonCancel.setText(MainWin.TT("Cancel"));
        ButtonCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonCancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(PasswordLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(RoleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ValidationLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(EmailLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(DescriptionLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(UserNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CustomLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ActiveLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(CustomComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(PasswordTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(RolComboBox, 0, 267, Short.MAX_VALUE)
                    .addComponent(ActiveCheckBox)
                    .addComponent(ValidComboBox, 0, 267, Short.MAX_VALUE)
                    .addComponent(DescriptionTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(UserNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(eMailTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(268, Short.MAX_VALUE)
                .addComponent(ButtonAcept)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(ButtonCancel)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(LabelOperation, javax.swing.GroupLayout.DEFAULT_SIZE, 447, Short.MAX_VALUE)
                .addContainerGap(35, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {ActiveLabel, CustomLabel, DescriptionLabel, EmailLabel, PasswordLabel, RoleLabel, UserNameLabel, ValidationLabel});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {CustomComboBox, DescriptionTextField, PasswordTextField, RolComboBox, UserNameTextField, ValidComboBox, eMailTextField});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(LabelOperation)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(UserNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(UserNameLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(DescriptionTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(DescriptionLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(eMailTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(EmailLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ValidComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ValidationLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(ActiveCheckBox)
                    .addComponent(ActiveLabel))
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(RolComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(RoleLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(PasswordTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(PasswordLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CustomComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CustomLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ButtonCancel)
                    .addComponent(ButtonAcept))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {ActiveLabel, DescriptionLabel, EmailLabel, PasswordLabel, RoleLabel, UserNameLabel, ValidationLabel});

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ButtonCancelActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_ButtonCancelActionPerformed
    {//GEN-HEADEREND:event_ButtonCancelActionPerformed
Cancel=true;
this.dispose();
    }//GEN-LAST:event_ButtonCancelActionPerformed

    private void ButtonAceptActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_ButtonAceptActionPerformed
    {//GEN-HEADEREND:event_ButtonAceptActionPerformed
try {
    Attribute Attr = User.getAttr(PDUser.fNAME);
    Attr.setValue(UserNameTextField.getText());
    Attr = User.getAttr(PDUser.fDESCRIPTION);
    Attr.setValue(DescriptionTextField.getText());
    Attr = User.getAttr(PDUser.fEMAIL);
    Attr.setValue(eMailTextField.getText());
    Attr = User.getAttr(PDUser.fVALIDATION);
    Attr.setValue(ValidComboBox.getSelectedItem());
    Attr = User.getAttr(PDUser.fACTIVE);
    Boolean Act=ActiveCheckBox.isSelected();
    Attr.setValue(Act);
    Attr = User.getAttr(PDUser.fROLE);
    Attr.setValue(RolComboBox.getSelectedItem());
    Attr = User.getAttr(PDUser.fPASSWORD);
    Attr.setValue(PasswordTextField.getText());
    Attr = User.getAttr(PDUser.fCUSTOM);
    Attr.setValue(CustomComboBox.getSelectedItem());
    Cancel = false;
    this.dispose();
} catch (PDException ex)
    {
    MainWin.Message(MainWin.DrvTT(ex.getLocalizedMessage()));
    }
    }//GEN-LAST:event_ButtonAceptActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt)//GEN-FIRST:event_formWindowClosing
    {//GEN-HEADEREND:event_formWindowClosing
Cancel=true;
    }//GEN-LAST:event_formWindowClosing

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox ActiveCheckBox;
    private javax.swing.JLabel ActiveLabel;
    private javax.swing.JButton ButtonAcept;
    private javax.swing.JButton ButtonCancel;
    private javax.swing.JComboBox CustomComboBox;
    private javax.swing.JLabel CustomLabel;
    private javax.swing.JLabel DescriptionLabel;
    private javax.swing.JTextField DescriptionTextField;
    private javax.swing.JLabel EmailLabel;
    private javax.swing.JLabel LabelOperation;
    private javax.swing.JLabel PasswordLabel;
    private javax.swing.JTextField PasswordTextField;
    private javax.swing.JComboBox RolComboBox;
    private javax.swing.JLabel RoleLabel;
    private javax.swing.JLabel UserNameLabel;
    private javax.swing.JTextField UserNameTextField;
    private javax.swing.JComboBox ValidComboBox;
    private javax.swing.JLabel ValidationLabel;
    private javax.swing.JTextField eMailTextField;
    // End of variables declaration//GEN-END:variables

/**
*
*/
public void AddMode()
{
LabelOperation.setText(MainWin.TT("Add_User"));
}
//----------------------------------------------------------------
/**
*
*/
public void DelMode()
{
LabelOperation.setText(MainWin.TT("Delete_User"));
UserNameTextField.setEditable(false);
DescriptionTextField.setEditable(false);
eMailTextField.setEditable(false);
ValidComboBox.setEditable(false);
ActiveCheckBox.setEnabled(false);
RolComboBox.setEditable(false);
PasswordTextField.setEditable(false);
CustomComboBox.setEditable(false);
}
//----------------------------------------------------------------
/**
*
*/
public void EditMode()
{
LabelOperation.setText(MainWin.TT("Update_User"));
UserNameTextField.setEditable(false);
}
//----------------------------------------------------------------
/**
*
*/
public void CopyMode()
{
LabelOperation.setText(MainWin.TT("Copy_User"));
UserNameTextField.setText(UserNameTextField.getText()+"1");
}
//----------------------------------------------------------------
/**
* @return the User
*/
public Record getRecord()
{
return User;
}
//----------------------------------------------------------------
/**
* @param pUser the User to set
*/
public void setRecord(Record pUser)
{
User = pUser;
Attribute Attr=User.getAttr(PDUser.fNAME);
UserNameLabel.setText(MainWin.DrvTT(Attr.getUserName()));
if (Attr.getValue()!=null)
    UserNameTextField.setText((String)Attr.getValue());
UserNameTextField.setToolTipText(MainWin.DrvTT(Attr.getDescription()));
Attr=User.getAttr(PDUser.fDESCRIPTION);
DescriptionLabel.setText(MainWin.DrvTT(Attr.getUserName()));
if (Attr.getValue()!=null)
    DescriptionTextField.setText((String)Attr.getValue());
DescriptionTextField.setToolTipText(MainWin.DrvTT(Attr.getDescription()));
Attr=User.getAttr(PDUser.fEMAIL);
EmailLabel.setText(MainWin.DrvTT(Attr.getUserName()));
if (Attr.getValue()!=null)
    eMailTextField.setText((String)Attr.getValue());
eMailTextField.setToolTipText(MainWin.DrvTT(Attr.getDescription()));
Attr=User.getAttr(PDUser.fVALIDATION);
ValidationLabel.setText(MainWin.DrvTT(Attr.getUserName()));
if (Attr.getValue()!=null)
    ValidComboBox.setSelectedItem((String)Attr.getValue());
ValidComboBox.setToolTipText(MainWin.DrvTT(Attr.getDescription()));
Attr=User.getAttr(PDUser.fACTIVE);
ActiveLabel.setText(MainWin.DrvTT(Attr.getUserName()));
if (Attr.getValue()!=null)
    ActiveCheckBox.setSelected((Boolean)Attr.getValue()); 
ActiveCheckBox.setToolTipText(MainWin.DrvTT(Attr.getDescription()));
Attr=User.getAttr(PDUser.fROLE);
RoleLabel.setText(MainWin.DrvTT(Attr.getUserName()));
if (Attr.getValue()!=null)
    RolComboBox.setSelectedItem((String)Attr.getValue());
RolComboBox.setToolTipText(MainWin.DrvTT(Attr.getDescription()));
Attr=User.getAttr(PDUser.fPASSWORD);
PasswordLabel.setText(MainWin.DrvTT(Attr.getUserName())); 
// if (Attr.getValue()!=null)
//    PasswordTextField.setText((String)Attr.getValue()); password never showed
PasswordTextField.setToolTipText(MainWin.DrvTT(Attr.getDescription()));
Attr=User.getAttr(PDUser.fCUSTOM);
CustomLabel.setText(MainWin.DrvTT(Attr.getUserName()));
if (Attr.getValue()!=null)
    CustomComboBox.setSelectedItem((String)Attr.getValue());
CustomComboBox.setToolTipText(MainWin.DrvTT(Attr.getDescription()));
}
//----------------------------------------------------------------
private DefaultComboBoxModel getComboModel()
{
return(ListObjects.getComboModel("Roles"));
}
//----------------------------------------------------------------
private DefaultComboBoxModel getComboModelAuth()
{
return(ListObjects.getComboModel("Authenticators"));
}
//----------------------------------------------------------------
/**
* @return the Cancel
*/
public boolean isCancel()
{
return Cancel;
}
//----------------------------------------------------------------
private ComboBoxModel getComboModelCustom()
{
return(ListObjects.getComboModel("Customizers"));
}
//----------------------------------------------------------------
}
