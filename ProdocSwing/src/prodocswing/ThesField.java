/*
 * OpenProdoc
 * 
 * See the help doc files distributed with
 * this work for additional information regarding copyright ownership.
 * Joaquin Hierro licenses this file to You under:
 * 
 * License GNU GPL v3 http://www.gnu.org/licenses/gpl.html
 * 
 * you may not use this file except in compliance with the License.  
 * Unless agreed to in writing, software is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * 
 * author: Joaquin Hierro      2012
 * 
 */

package prodocswing;

import java.awt.Font;
import javax.swing.JDialog;
import prodoc.Attribute;
import prodoc.DriverGeneric;
import prodoc.PDThesaur;
import prodocswing.forms.MainThes;
import prodocswing.forms.MainWin;

/**
 *
 * @author xIS06640
 */
public class ThesField extends javax.swing.JPanel
{
static private Font DialogFont=null;
private DriverGeneric Session=null;
private PDThesaur UseTerm=null;
private String LocalThes=PDThesaur.ROOTTERM;
private JDialog ParentWin;
private Attribute Attr;
/**
 * Creates new form ThesField
 * @param pParentWin
 * @param pLocalThes
 * @param pUseTerm  
 */
public ThesField(JDialog pParentWin, PDThesaur pUseTerm, String pLocalThes)
{
ParentWin=pParentWin; 
LocalThes=pLocalThes;
initComponents();
setUseTerm(pUseTerm);
}

/**
 * This method is called from within the constructor to initialize the form.
 * WARNING: Do NOT modify this code. The content of this method is always
 * regenerated by the Form Editor.
 */
@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        USETextField = new javax.swing.JTextField();
        SelUseButton = new javax.swing.JButton();
        DelButton = new javax.swing.JButton();

        USETextField.setEditable(false);
        USETextField.setFont(getDialogFont());

        SelUseButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/tree.png"))); // NOI18N
        SelUseButton.setToolTipText("");
        SelUseButton.setFocusable(false);
        SelUseButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        SelUseButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        SelUseButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                SelUseButtonActionPerformed(evt);
            }
        });

        DelButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/del.png"))); // NOI18N
        DelButton.setToolTipText("");
        DelButton.setFocusable(false);
        DelButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        DelButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        DelButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                DelButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(USETextField, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(SelUseButton, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(DelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(USETextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(SelUseButton, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(DelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void SelUseButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_SelUseButtonActionPerformed
    {//GEN-HEADEREND:event_SelUseButtonActionPerformed
MainThes MTW=new MainThes( ParentWin, false, MainWin.getSession(), LocalThes);
MTW.setLocationRelativeTo(null);
MTW.ModeSelect();
MTW.setModal(true);
MTW.setVisible(true);
setUseTerm(MTW.getTermAct());
    }//GEN-LAST:event_SelUseButtonActionPerformed

    private void DelButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_DelButtonActionPerformed
    {//GEN-HEADEREND:event_DelButtonActionPerformed
try {
UseTerm.Clear();
UpdateText();
} catch(Exception ex)
    {
    MainWin.Message(MainWin.DrvTT(ex.getLocalizedMessage()));
    }
    }//GEN-LAST:event_DelButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton DelButton;
    private javax.swing.JButton SelUseButton;
    private javax.swing.JTextField USETextField;
    // End of variables declaration//GEN-END:variables

/**
 * @return the DialogFont
 */
public static Font getDialogFont()
{
return MainWin.getFontDialog();
}
//----------------------------------------------------------------
/**
 * @return the Attr
 */
public Attribute getAttr()
{
return Attr;
}
//----------------------------------------------------------------
/**
 * @param pAttr the Attr to set
 */
public void setAttr(Attribute pAttr)
{
Attr = pAttr;
}
//----------------------------------------------------------------
/**
 * @return the UseTerm
 */
public PDThesaur getUseTerm()
{
return UseTerm;
}
//----------------------------------------------------------------
private void UpdateText()
{
if (getUseTerm()==null || getUseTerm().getName()==null)
    USETextField.setText("");
else
    USETextField.setText(getUseTerm().getName());
}
//----------------------------------------------------------------
/**
 * @param UseTerm the UseTerm to set
 */
public void setUseTerm(PDThesaur pUseTerm)
{
UseTerm = pUseTerm;
UpdateText();
}
}
