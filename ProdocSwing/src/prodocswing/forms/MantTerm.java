/*
 * OpenProdoc
 * 
 * See the help doc files distributed with
 * this work for additional information regarding copyright ownership.
 * Joaquin Hierro licenses this file to You under:
 * 
 * License GNU GPL v3 http://www.gnu.org/licenses/gpl.html
 * 
 * you may not use this file except in compliance with the License.  
 * Unless agreed to in writing, software is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * 
 * author: Joaquin Hierro      2011
 * 
 */

/*
 * MantUsers.java
 *
 * Created on 17-feb-2010, 21:16:33
 */

package prodocswing.forms;

import java.util.HashSet;
import java.util.Vector;
import javax.swing.JDialog;
import prodoc.Attribute;
import prodoc.PDException;
import prodoc.PDThesaur;
import prodoc.Record;
import prodocswing.PDTableModel;

/**
 *
 * @author jhierrot
 */
public class MantTerm extends javax.swing.JDialog
{
private Record Term;
private boolean Cancel;
private PDThesaur TermAct;
private PDTableModel NTMembers;
private PDTableModel RTMembers;
private PDTableModel UFMembers;
private Vector VEmpty=new Vector();
private HashSet MemUF;
private HashSet MemNT;
private HashSet MemRT;
private Vector AttrMemRT=new Vector();
PDThesaur UseTerm=null;
String LocalThes=PDThesaur.ROOTTERM;

/** Creates new form MantUsers
 * @param parent 
 * @param modal
 * @param Thes  
 */
public MantTerm(JDialog parent, boolean modal, String Thes)
{
super(parent, modal);
try {
initComponents();
LocalThes=Thes;
TermAct = new PDThesaur(MainWin.getSession());
NTTable.setAutoCreateRowSorter(true);
NTTable.setAutoCreateColumnsFromModel(true);
RTTable.setAutoCreateRowSorter(true);
RTTable.setAutoCreateColumnsFromModel(true);
UFTable.setAutoCreateRowSorter(true);
UFTable.setAutoCreateColumnsFromModel(true);
} catch (PDException ex)
    {MainWin.Message(MainWin.DrvTT(ex.getLocalizedMessage()));
    }
}

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        LabelOperation = new javax.swing.JLabel();
        ParentNameLabel = new javax.swing.JLabel();
        ParentNameTextField = new javax.swing.JTextField();
        IdNameLabel = new javax.swing.JLabel();
        IdNameTextField = new javax.swing.JTextField();
        TermNameLabel = new javax.swing.JLabel();
        TermNameTextField = new javax.swing.JTextField();
        TermDescripLabel = new javax.swing.JLabel();
        TermDescripTextField = new javax.swing.JTextField();
        USELabel = new javax.swing.JLabel();
        USETextField = new javax.swing.JTextField();
        LangLabel = new javax.swing.JLabel();
        SCNTextField = new javax.swing.JTextField();
        SCNLabel = new javax.swing.JLabel();
        LangTextField = new javax.swing.JTextField();
        SelUseButton = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        PanelNT = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        NTTable = new javax.swing.JTable();
        ToolBarNT = new javax.swing.JToolBar();
        PanelRT = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        RTTable = new javax.swing.JTable();
        ToolBarRT = new javax.swing.JToolBar();
        AddButtonRT = new javax.swing.JButton();
        DelButtonRT = new javax.swing.JButton();
        PanelUF = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        UFTable = new javax.swing.JTable();
        ToolBarUF = new javax.swing.JToolBar();
        ButtonAcept = new javax.swing.JButton();
        ButtonCancel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle(MainWin.TT("Term_Maintenance"));
        setModalExclusionType(java.awt.Dialog.ModalExclusionType.APPLICATION_EXCLUDE);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter()
        {
            public void windowClosing(java.awt.event.WindowEvent evt)
            {
                formWindowClosing(evt);
            }
        });

        LabelOperation.setFont(new java.awt.Font("DejaVu Sans", 1, 14)); // NOI18N
        LabelOperation.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        LabelOperation.setText("jLabel1");

        ParentNameLabel.setFont(MainWin.getFontDialog());
        ParentNameLabel.setText("BT");

        ParentNameTextField.setEditable(false);
        ParentNameTextField.setFont(MainWin.getFontDialog());

        IdNameLabel.setFont(MainWin.getFontDialog());
        IdNameLabel.setText("Id");

        IdNameTextField.setEditable(false);
        IdNameTextField.setFont(MainWin.getFontDialog());

        TermNameLabel.setFont(MainWin.getFontDialog());
        TermNameLabel.setText("Name");

        TermNameTextField.setFont(MainWin.getFontDialog());

        TermDescripLabel.setFont(MainWin.getFontDialog());
        TermDescripLabel.setText("Definition");

        TermDescripTextField.setFont(MainWin.getFontDialog());

        USELabel.setFont(MainWin.getFontDialog());
        USELabel.setText("USE");

        USETextField.setEditable(false);
        USETextField.setFont(MainWin.getFontDialog());

        LangLabel.setFont(MainWin.getFontDialog());
        LangLabel.setText("Language");

        SCNTextField.setFont(MainWin.getFontDialog());

        SCNLabel.setFont(MainWin.getFontDialog());
        SCNLabel.setText("SCN");

        LangTextField.setFont(MainWin.getFontDialog());

        SelUseButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/tree.png"))); // NOI18N
        SelUseButton.setToolTipText(MainWin.TT("Add_Related_Term"));
        SelUseButton.setFocusable(false);
        SelUseButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        SelUseButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        SelUseButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                SelUseButtonActionPerformed(evt);
            }
        });

        jScrollPane1.setViewportView(NTTable);

        ToolBarNT.setRollover(true);

        javax.swing.GroupLayout PanelNTLayout = new javax.swing.GroupLayout(PanelNT);
        PanelNT.setLayout(PanelNTLayout);
        PanelNTLayout.setHorizontalGroup(
            PanelNTLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelNTLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PanelNTLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 591, Short.MAX_VALUE)
                    .addComponent(ToolBarNT, javax.swing.GroupLayout.DEFAULT_SIZE, 591, Short.MAX_VALUE))
                .addContainerGap())
        );
        PanelNTLayout.setVerticalGroup(
            PanelNTLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelNTLayout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(ToolBarNT, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 131, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab(MainWin.TT("Narrow_Terms"), PanelNT);

        jScrollPane2.setViewportView(RTTable);

        ToolBarRT.setRollover(true);

        AddButtonRT.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/add.png"))); // NOI18N
        AddButtonRT.setToolTipText(MainWin.TT("Add_user_to_group"));
        AddButtonRT.setFocusable(false);
        AddButtonRT.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        AddButtonRT.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        AddButtonRT.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                AddButtonRTActionPerformed(evt);
            }
        });
        ToolBarRT.add(AddButtonRT);

        DelButtonRT.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/del.png"))); // NOI18N
        DelButtonRT.setToolTipText(MainWin.TT("Delete_user_from_group"));
        DelButtonRT.setFocusable(false);
        DelButtonRT.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        DelButtonRT.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        DelButtonRT.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                DelButtonRTActionPerformed(evt);
            }
        });
        ToolBarRT.add(DelButtonRT);

        javax.swing.GroupLayout PanelRTLayout = new javax.swing.GroupLayout(PanelRT);
        PanelRT.setLayout(PanelRTLayout);
        PanelRTLayout.setHorizontalGroup(
            PanelRTLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelRTLayout.createSequentialGroup()
                .addGroup(PanelRTLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelRTLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(ToolBarRT, javax.swing.GroupLayout.DEFAULT_SIZE, 585, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelRTLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 591, Short.MAX_VALUE)))
                .addContainerGap())
        );
        PanelRTLayout.setVerticalGroup(
            PanelRTLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelRTLayout.createSequentialGroup()
                .addGap(2, 2, 2)
                .addComponent(ToolBarRT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 122, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab(MainWin.TT("Related_Terms"), PanelRT);

        jScrollPane3.setViewportView(UFTable);

        ToolBarUF.setRollover(true);

        javax.swing.GroupLayout PanelUFLayout = new javax.swing.GroupLayout(PanelUF);
        PanelUF.setLayout(PanelUFLayout);
        PanelUFLayout.setHorizontalGroup(
            PanelUFLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelUFLayout.createSequentialGroup()
                .addGroup(PanelUFLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelUFLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(ToolBarUF, javax.swing.GroupLayout.DEFAULT_SIZE, 585, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelUFLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 591, Short.MAX_VALUE)))
                .addContainerGap())
        );
        PanelUFLayout.setVerticalGroup(
            PanelUFLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelUFLayout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addComponent(ToolBarUF, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 129, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab(MainWin.TT("Used_For"), PanelUF);

        ButtonAcept.setFont(MainWin.getFontDialog());
        ButtonAcept.setText(MainWin.TT("Ok"));
        ButtonAcept.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                ButtonAceptActionPerformed(evt);
            }
        });

        ButtonCancel.setFont(MainWin.getFontDialog());
        ButtonCancel.setText(MainWin.TT("Cancel"));
        ButtonCancel.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                ButtonCancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTabbedPane1)
                    .addComponent(LabelOperation, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(ButtonAcept)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(ButtonCancel))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ParentNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(LangLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(SCNLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(LangTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(SCNTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 443, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(USELabel, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(TermNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(TermDescripLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(TermNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(TermDescripTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 443, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(USETextField, javax.swing.GroupLayout.PREFERRED_SIZE, 403, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(SelUseButton, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(ParentNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(IdNameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(IdNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(176, 176, 176)))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {TermDescripLabel, TermNameLabel, USELabel});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(LabelOperation)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ParentNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ParentNameLabel))
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(IdNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(IdNameLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(TermNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(TermNameLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(TermDescripTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(TermDescripLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(USETextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(SelUseButton, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(USELabel)
                        .addGap(2, 2, 2)))
                .addGap(4, 4, 4)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(LangTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(LangLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(SCNTextField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SCNLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ButtonCancel)
                    .addComponent(ButtonAcept))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ButtonCancelActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_ButtonCancelActionPerformed
    {//GEN-HEADEREND:event_ButtonCancelActionPerformed
Cancel=true;
try {
if (MainWin.getSession().isInTransaction())
        MainWin.getSession().AnularTrans();
} catch (PDException ex)
    {MainWin.Message(MainWin.DrvTT(ex.getLocalizedMessage()));
    }
this.dispose();
    }//GEN-LAST:event_ButtonCancelActionPerformed

    private void ButtonAceptActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_ButtonAceptActionPerformed
    {//GEN-HEADEREND:event_ButtonAceptActionPerformed
try {
Attribute Attr=Term.getAttr(PDThesaur.fNAME);
Attr.setValue(TermNameTextField.getText());
Attr=Term.getAttr(PDThesaur.fDESCRIP);
Attr.setValue(TermDescripTextField.getText());
Attr=Term.getAttr(PDThesaur.fUSE);
if (UseTerm!=null)
    Attr.setValue(UseTerm.getPDId());
Attr=Term.getAttr(PDThesaur.fLANG);
Attr.setValue(LangTextField.getText());
Attr=Term.getAttr(PDThesaur.fSCN);
Attr.setValue(SCNTextField.getText());
} catch (PDException ex)
    {MainWin.Message(MainWin.DrvTT(ex.getLocalizedMessage()));
    }
Cancel=false;
this.dispose();
    }//GEN-LAST:event_ButtonAceptActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt)//GEN-FIRST:event_formWindowClosing
    {//GEN-HEADEREND:event_formWindowClosing
Cancel=true;
    }//GEN-LAST:event_formWindowClosing

    private void AddButtonRTActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_AddButtonRTActionPerformed
    {//GEN-HEADEREND:event_AddButtonRTActionPerformed
try {
AddTermRT ART=new AddTermRT(this, true, LocalThes);
ART.AddMode();
ART.setLocationRelativeTo(null);
ART.setVisible(true);
if (ART.isCancel())
    return;
PDThesaur RTerm=ART.getUseTerm();
if (RTerm==null)
    return;
getMemRT().add(RTerm.getPDId());
RefreshRT();
} catch (PDException ex)
    {
    MainWin.Message(MainWin.DrvTT(ex.getLocalizedMessage()));
    }
    }//GEN-LAST:event_AddButtonRTActionPerformed

    private void DelButtonRTActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_DelButtonRTActionPerformed
    {//GEN-HEADEREND:event_DelButtonRTActionPerformed
if (RTTable.getSelectedRow()==-1)
    return;
try {
AddTermRT ART=new AddTermRT(this, true, LocalThes);
ART.setRecord(RTMembers.getElement(RTTable.convertRowIndexToModel(RTTable.getSelectedRow())));
ART.DelMode();
ART.setLocationRelativeTo(null);
ART.setVisible(true);
if (ART.isCancel())
    return;
getMemRT().remove(ART.getUseTerm().getPDId());
RefreshRT();
} catch (PDException ex)
    {
    MainWin.Message(MainWin.DrvTT(ex.getLocalizedMessage()));
    }
    }//GEN-LAST:event_DelButtonRTActionPerformed

    private void SelUseButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_SelUseButtonActionPerformed
    {//GEN-HEADEREND:event_SelUseButtonActionPerformed
MainThes MTW=new MainThes( (JDialog)this, false, MainWin.getSession(), LocalThes);
MTW.setLocationRelativeTo(null);
MTW.ModeSelect();
MTW.setModal(true);
MTW.setVisible(true);
UseTerm=MTW.getTermAct();
if (UseTerm==null)
    USETextField.setText("");
else
    USETextField.setText(UseTerm.getName());
    }//GEN-LAST:event_SelUseButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddButtonRT;
    private javax.swing.JButton ButtonAcept;
    private javax.swing.JButton ButtonCancel;
    private javax.swing.JButton DelButtonRT;
    private javax.swing.JLabel IdNameLabel;
    private javax.swing.JTextField IdNameTextField;
    private javax.swing.JLabel LabelOperation;
    private javax.swing.JLabel LangLabel;
    private javax.swing.JTextField LangTextField;
    private javax.swing.JTable NTTable;
    private javax.swing.JPanel PanelNT;
    private javax.swing.JPanel PanelRT;
    private javax.swing.JPanel PanelUF;
    private javax.swing.JLabel ParentNameLabel;
    private javax.swing.JTextField ParentNameTextField;
    private javax.swing.JTable RTTable;
    private javax.swing.JLabel SCNLabel;
    private javax.swing.JTextField SCNTextField;
    private javax.swing.JButton SelUseButton;
    private javax.swing.JLabel TermDescripLabel;
    private javax.swing.JTextField TermDescripTextField;
    private javax.swing.JLabel TermNameLabel;
    private javax.swing.JTextField TermNameTextField;
    private javax.swing.JToolBar ToolBarNT;
    private javax.swing.JToolBar ToolBarRT;
    private javax.swing.JToolBar ToolBarUF;
    private javax.swing.JTable UFTable;
    private javax.swing.JLabel USELabel;
    private javax.swing.JTextField USETextField;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    // End of variables declaration//GEN-END:variables

/**
*
*/
public void AddMode()
{
LabelOperation.setText(MainWin.TT("Add_Term"));
//AddButtonRT.setEnabled(false);
//DelButtonRT.setEnabled(false);
}
//----------------------------------------------------------------
/**
*
*/
public void DelMode()
{
LabelOperation.setText(MainWin.TT("Delete_Term"));
TermNameTextField.setEditable(false);
TermDescripTextField.setEditable(false);
AddButtonRT.setEnabled(false);
DelButtonRT.setEnabled(false);
USETextField.setEnabled(false);
LangTextField.setEditable(false);
SCNTextField.setEditable(false);
}
//----------------------------------------------------------------
/**
*
*/
public void EditMode()
{
LabelOperation.setText(MainWin.TT("Update_Term"));
//TermNameTextField.setEditable(false);
}
//----------------------------------------------------------------
/**
*
*/
public void CopyMode()
{
LabelOperation.setText(MainWin.TT("Copy_Term"));
TermNameTextField.setText(TermNameTextField.getText()+"1");
}
//----------------------------------------------------------------
/**
* @return the ACL
*/
public Record getRecord()
{
return Term;
}
//----------------------------------------------------------------
/**
 * @param pTerm
*/
public void setRecord(Record pTerm, String ParentName)
{
try {
Term = pTerm;
Attribute Attr = Term.getAttr(PDThesaur.fPDID);
String Id=(String)Attr.getValue();
if (Id != null)
    {
    IdNameTextField.setText(Id);    
    MemUF=TermAct.getListUF(Id);
    MemNT=TermAct.getListDirectDescendList(Id);
    MemRT=TermAct.getListRT(Id);
    RefreshNT();
    RefreshRT();
    RefreshUF();
    }
else
    {
    IdNameTextField.setText("");    
    MemUF=new HashSet();
    MemRT=new HashSet();
    MemNT=new HashSet();
    }
IdNameLabel.setText(MainWin.TT(Attr.getUserName()));
IdNameTextField.setToolTipText(Attr.getDescription());
Attr = Term.getAttr(PDThesaur.fPARENTID);
ParentNameLabel.setText(MainWin.TT("Broad_Term"));
ParentNameTextField.setText(ParentName);
ParentNameTextField.setToolTipText(Attr.getDescription());
Attr = Term.getAttr(PDThesaur.fNAME);
TermNameLabel.setText(MainWin.TT(Attr.getUserName()));
if (Attr.getValue() != null)
    {
    TermNameTextField.setText((String) Attr.getValue());
    }
TermNameTextField.setToolTipText(Attr.getDescription());
Attr = Term.getAttr(PDThesaur.fDESCRIP);
TermDescripLabel.setText(MainWin.TT(Attr.getUserName()));
if (Attr.getValue() != null)
    {
    TermDescripTextField.setText((String) Attr.getValue());
    }
TermDescripTextField.setToolTipText(Attr.getDescription());
Attr=Term.getAttr(PDThesaur.fUSE);
USELabel.setText(MainWin.TT(Attr.getUserName()));
UseTerm=new PDThesaur(MainWin.getSession());
if (Attr.getValue() != null)
    {
    UseTerm.Load((String) Attr.getValue());
    USETextField.setText(UseTerm.getName());
    }
USETextField.setToolTipText(Attr.getDescription());
Attr = Term.getAttr(PDThesaur.fLANG);
LangLabel.setText(MainWin.TT(Attr.getUserName()));
if (Attr.getValue() != null)
    {
    LangTextField.setText((String) Attr.getValue());
    }
LangTextField.setToolTipText(Attr.getDescription());
Attr = Term.getAttr(PDThesaur.fSCN);
SCNLabel.setText(MainWin.TT(Attr.getUserName()));
if (Attr.getValue() != null)
    {
    SCNTextField.setText((String) Attr.getValue());
    }
SCNTextField.setToolTipText(Attr.getDescription());
} catch (PDException ex)
    {
    MainWin.Message(MainWin.DrvTT(ex.getLocalizedMessage()));
    }
}
//----------------------------------------------------------------
private void RefreshRT() throws PDException
{
RTMembers = new PDTableModel();
RTMembers.setDrv(MainWin.getSession());
RTMembers.setListFields(PDThesaur.getRecordStructPDThesaur());
AttrMemRT=TermAct.getList(getMemRT());
RTMembers.setVector(AttrMemRT);
RTTable.setModel(RTMembers);
RTTable.getColumnModel().getColumn(0).setMaxWidth(0);
RTTable.getColumnModel().removeColumn(RTTable.getColumnModel().getColumn(0));
}
//----------------------------------------------------------------
private void RefreshNT() throws PDException
{
NTMembers = new PDTableModel();
NTMembers.setDrv(MainWin.getSession());
NTMembers.setListFields(PDThesaur.getRecordStructPDThesaur());
if (!MemNT.isEmpty())
    NTMembers.setCursor(TermAct.LoadList(MemNT));
else    
    NTMembers.setVector(VEmpty);
NTTable.setModel(NTMembers);
NTTable.getColumnModel().getColumn(0).setMaxWidth(0);
NTTable.getColumnModel().removeColumn(NTTable.getColumnModel().getColumn(0));
}
//----------------------------------------------------------------
private void RefreshUF() throws PDException
{
UFMembers = new PDTableModel();
UFMembers.setDrv(MainWin.getSession());
UFMembers.setListFields(PDThesaur.getRecordStructPDThesaur());
if (!MemUF.isEmpty())
    UFMembers.setCursor(TermAct.LoadList(MemUF));
else    
    UFMembers.setVector(VEmpty);
UFTable.setModel(UFMembers);
UFTable.getColumnModel().getColumn(0).setMaxWidth(0);
UFTable.getColumnModel().removeColumn(UFTable.getColumnModel().getColumn(0));
}
//----------------------------------------------------------------
/**
* @return the Cancel
*/
public boolean isCancel()
{
return Cancel;
}
//----------------------------------------------------------------

    /**
     * @return the MemRT
     */
    public HashSet getMemRT()
    {
        return MemRT;
    }
}
