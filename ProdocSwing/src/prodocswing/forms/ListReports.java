/*
 * OpenProdoc
 * 
 * See the help doc files distributed with
 * this work for additional information regarding copyright ownership.
 * Joaquin Hierro licenses this file to You under:
 * 
 * License GNU GPL v3 http://www.gnu.org/licenses/gpl.html
 * 
 * you may not use this file except in compliance with the License.  
 * Unless agreed to in writing, software is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * 
 * author: Joaquin Hierro      2015
 * 
 */

/*
 * ListReports.java
 *
 * Created on 12-feb-2015, 20:39:16
 */
package prodocswing.forms;

import java.util.ArrayList;
import java.util.Vector;
import javax.swing.JDialog;
import prodoc.Attribute;
import prodoc.PDException;
import prodoc.Record;
import prodocswing.PDTableModel;

/**
 *
 * @author jhierrot
 */
public final class ListReports extends javax.swing.JDialog
{
PDTableModel ReportsList = new PDTableModel();
/**
 * 
 */
protected JDialog MantForm;
String TypeDocRestore="";
String FoldType=null;
Vector RepList=new Vector();
Record R=new Record();
private static final String File_name="File_name";
/** Creates new form ListObjects
 * @param parent 
 * @param modal
 * @throws prodoc.PDException
 */
public ListReports(java.awt.Frame parent, boolean modal) throws PDException
{
super(parent, modal);
initComponents();
ObjectsTable.setAutoCreateRowSorter(true);
ObjectsTable.setAutoCreateColumnsFromModel(true);
R.addAttr(new Attribute(File_name, File_name, File_name, Attribute.tSTRING, true, null, 256, true, false, false));
}
/** Creates new form ListObjects
 * @param parent 
 * @param modal
 * @throws prodoc.PDException
 */
public ListReports(javax.swing.JDialog parent, boolean modal) throws PDException
{
super(parent, modal);
initComponents();
ObjectsTable.setAutoCreateRowSorter(true);
ObjectsTable.setAutoCreateColumnsFromModel(true);
R.addAttr(new Attribute(File_name, File_name, File_name, Attribute.tSTRING, true, null, 256, true, false, false));
}

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        jScrollPane1 = new javax.swing.JScrollPane();
        ObjectsTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle(MainWin.TT("Reports_Results"));
        addWindowListener(new java.awt.event.WindowAdapter()
        {
            public void windowClosing(java.awt.event.WindowEvent evt)
            {
                formWindowClosing(evt);
            }
        });

        ObjectsTable.setAutoCreateRowSorter(true);
        ObjectsTable.setFont(MainWin.getFontList());
        ObjectsTable.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                ObjectsTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(ObjectsTable);

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText(MainWin.TT("Reports_Results"));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 641, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 617, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 334, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void formWindowClosing(java.awt.event.WindowEvent evt)//GEN-FIRST:event_formWindowClosing
{//GEN-HEADEREND:event_formWindowClosing
}//GEN-LAST:event_formWindowClosing

    private void ObjectsTableMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_ObjectsTableMouseClicked
    {//GEN-HEADEREND:event_ObjectsTableMouseClicked
if (getObjectsTable().getSelectedRow()==-1)
    return;
if (evt.getClickCount()<2)
    return;
Record R=(Record)RepList.elementAt(getObjectsTable().convertRowIndexToModel(getObjectsTable().getSelectedRow()));
MainWin.Execute((String)R.getAttr(File_name).getValue());
    }//GEN-LAST:event_ObjectsTableMouseClicked

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable ObjectsTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

//----------------------------------------------------------------
/**
 * 
 * @return
 */
protected PDTableModel getPDTableModel()
{
return ((PDTableModel) getObjectsTable().getModel());
}
//----------------------------------------------------------------
/**
 * 
 * @return
 */
protected int getSelectedRow()
{
return (getObjectsTable().convertRowIndexToModel(getObjectsTable().getSelectedRow()));
}
//--------------------------------------------------------------------
/**
* @return the ObjectsTable
*/
protected javax.swing.JTable getObjectsTable()
{
return ObjectsTable;
}
//--------------------------------------------------------------------
/**
 * 
 */
protected void RefreshTable()
{
ReportsList = new PDTableModel();
ReportsList.setDrv(MainWin.getSession());
ReportsList.setVector(RepList);
ReportsList.setListFields(R);
getObjectsTable().setModel(ReportsList);
}
//--------------------------------------------------------------------
/**
 * 
 * @param GeneratedRep
 * @throws prodoc.PDException
 */
public void setRepList(ArrayList<String> GeneratedRep) throws PDException
{
for (String get : GeneratedRep)
    {
    Record Temp=new Record();
    Temp.addAttr(new Attribute(File_name, File_name, File_name, Attribute.tSTRING, true, get, 256, true, false, false));
    RepList.add(Temp);
    }
RefreshTable();
}
//----------------------------------------------------------------
}
