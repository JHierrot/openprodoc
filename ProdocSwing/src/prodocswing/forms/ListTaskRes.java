/*
 * OpenProdoc
 * 
 * See the help doc files distributed with
 * this work for additional information regarding copyright ownership.
 * Joaquin Hierro licenses this file to You under:
 * 
 * License GNU GPL v3 http://www.gnu.org/licenses/gpl.html
 * 
 * you may not use this file except in compliance with the License.  
 * Unless agreed to in writing, software is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * 
 * author: Joaquin Hierro      2011
 * 
 */

/*
 * ListObjects.java
 *
 * Created on 12-feb-2010, 20:39:16
 */

package prodocswing.forms;

import javax.swing.JDialog;
import prodoc.*;
import prodocswing.PDTableModel;

/**
 *
 * @author jhierrot
 */
public final class ListTaskRes extends javax.swing.JDialog
{
PDTableModel AffectedFoldList = new PDTableModel();
JDialog Fparent;
Cursor CursorId;
/**
 * 
 */
protected JDialog MantForm;
String TypeDocRestore="";
String FoldType=null;
String DocType=null;

/** Creates new form ListObjects
 * @param parent 
 * @param modal
 */
public ListTaskRes(javax.swing.JDialog parent, boolean modal)
{
super(parent, modal);
Fparent=parent;
initComponents();
ObjectsTable.setAutoCreateRowSorter(true);
ObjectsTable.setAutoCreateColumnsFromModel(true);
}

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        jScrollPane1 = new javax.swing.JScrollPane();
        ObjectsTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle(MainWin.TT("Test_Selected_Elements"));
        addWindowListener(new java.awt.event.WindowAdapter()
        {
            public void windowClosing(java.awt.event.WindowEvent evt)
            {
                formWindowClosing(evt);
            }
        });

        ObjectsTable.setAutoCreateRowSorter(true);
        ObjectsTable.setFont(MainWin.getFontList());
        jScrollPane1.setViewportView(ObjectsTable);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 641, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 44, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 369, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void formWindowClosing(java.awt.event.WindowEvent evt)//GEN-FIRST:event_formWindowClosing
{//GEN-HEADEREND:event_formWindowClosing
}//GEN-LAST:event_formWindowClosing

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable ObjectsTable;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

//----------------------------------------------------------------
/**
 * 
 * @return
 */
protected PDTableModel getPDTableModel()
{
return ((PDTableModel) getObjectsTable().getModel());
}
//----------------------------------------------------------------
/**
 * 
 * @return
 */
protected int getSelectedRow()
{
return (getObjectsTable().convertRowIndexToModel(getObjectsTable().getSelectedRow()));
}
//--------------------------------------------------------------------
/**
* @return the ObjectsTable
*/
protected javax.swing.JTable getObjectsTable()
{
return ObjectsTable;
}
//--------------------------------------------------------------------
public void SetCursor(Cursor pCursorId)
{
CursorId=pCursorId;    
RefreshTable();
}
//--------------------------------------------------------------------
public void setFoldType(String pFoldType)
{
FoldType=pFoldType;    
}
//--------------------------------------------------------------------
void setDocType(String pDocType)
{
DocType=pDocType;    
}
//--------------------------------------------------------------------
/**
 * 
 */
protected void RefreshTable()
{
try {
AffectedFoldList = new PDTableModel();
AffectedFoldList.setDrv(MainWin.getSession());
Record Rec;
if (FoldType!=null)
    {
    PDFolders FoldAf = new PDFolders(MainWin.getSession(), FoldType);
    Rec=FoldAf.getRecSum().CopyMono();
    }
else
    {
    PDDocs DocAf = new PDDocs(MainWin.getSession(), DocType);
    Rec=DocAf.getRecSum().CopyMono();
    }
AffectedFoldList.setListFields(Rec);
AffectedFoldList.setCursor(CursorId);
getObjectsTable().setModel(AffectedFoldList);
} catch (PDException ex)
    {
    MainWin.Message(MainWin.TT("Error_assigning_columns_to_table")+":"+MainWin.DrvTT(ex.getLocalizedMessage()));
    }
}
//----------------------------------------------------------------
}
